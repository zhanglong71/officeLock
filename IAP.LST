C51 COMPILER V9.03   IAP                                                                   03/31/2012 17:05:13 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE IAP
OBJECT MODULE PLACED IN IAP.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IAP.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #define  IAP_GLOBALS
   2          #include <includes.h>
   3          /************************** 打开 ISP,IAP 功能 *******************************/
   4          void ISP_IAP_enable(void)
   5          {
   6   1              EA      =       0;      /* 关中断 */
   7   1              ISP_CONTR       =       ISP_CONTR & 0x18;       /* 0001,1000 */
   8   1              ISP_CONTR       =       ISP_CONTR | WAIT_TIME;
   9   1              ISP_CONTR       =       ISP_CONTR | 0x80;       /* 1000,0000 */
  10   1      }
  11          
  12          /************************** 关闭 ISP,IAP 功能 ******************************/
  13          void ISP_IAP_disable(void)
  14          {
  15   1              ISP_CONTR       =       ISP_CONTR & 0x7f;       /* 0111,1111 */
  16   1              ISP_TRIG        =       0x00;
  17   1              EA                      =   1;                /* 开中断 */
  18   1      }
  19          
  20          /************************** 字节读 *****************************************/
  21          INT8U IAP_read(INT16U byte_addr)
  22          {
  23   1              ISP_ADDRH       =       (INT8U)(byte_addr >> 8);
  24   1              ISP_ADDRL       =       (INT8U)(byte_addr & 0x00ff);
  25   1      
  26   1              ISP_CMD         =       ISP_CMD &       0xf8;        /* 1111,1000 */
  27   1              ISP_CMD         =       ISP_CMD |       READ_AP_and_Data_Memory_Command;        /* 0000,0001 */
  28   1      
  29   1              ISP_IAP_enable();
  30   1      
  31   1              ISP_TRIG        =       0x46;
  32   1              ISP_TRIG        =       0xb9;
  33   1              _nop_();
  34   1      
  35   1              ISP_IAP_disable();
  36   1              return (ISP_DATA);
  37   1      }
  38          
  39          /**************************** 扇区擦除 ***************************************/
  40          INT8U IAP_erase(INT16U sector_addr)
  41          {
  42   1              INT16U get_sector_addr  =       0;
  43   1              get_sector_addr                 =       (sector_addr & 0xfe00); /* 1111,1110,0000,0000; 取扇区地址 */
  44   1              ISP_ADDRH                       =       (INT8U)(get_sector_addr >> 8);
  45   1              ISP_ADDRL                       =       0x00;
  46   1      
  47   1              ISP_CMD =       ISP_CMD &       0xf8;   /* 1111,1000 */
  48   1              ISP_CMD =       ISP_CMD |       SECTOR_ERASE_AP_and_Data_Memory_Command;        /* 0000,0011 */
  49   1      
  50   1              ISP_IAP_enable();
  51   1              ISP_TRIG        =       0x46;        /* 触发ISP_IAP命令 */
  52   1              ISP_TRIG        =       0xb9;        /* 触发ISP_IAP命令 */
  53   1               _nop_();
  54   1      
  55   1              ISP_IAP_disable();
C51 COMPILER V9.03   IAP                                                                   03/31/2012 17:05:13 PAGE 2   

  56   1              return OK;
  57   1      }
  58          
  59          /****************************** 字节编程并校验 *********************************/
  60          INT8U IAP_pro_ver(INT16U byte_addr, INT8U original_data)
  61          {
  62   1              ISP_ADDRH       =       (INT8U)(byte_addr >> 8);
  63   1              ISP_ADDRL       =       (INT8U)(byte_addr & 0x00ff);
  64   1      
  65   1              ISP_CMD         =       ISP_CMD &       0xf8;        /* 1111,1000 */
  66   1              ISP_CMD         =       ISP_CMD |       PROGRAM_AP_and_Data_Memory_Command;     /* 0000,0010 */
  67   1              ISP_DATA        =       original_data;
  68   1      
  69   1              ISP_IAP_enable();
  70   1      
  71   1              ISP_TRIG        =       0x46;
  72   1              ISP_TRIG        =       0xb9;
  73   1              _nop_();
  74   1      
  75   1              ISP_DATA        =       0x00;
  76   1      
  77   1              ISP_CMD         =       ISP_CMD &       0xf8;        /* 1111,1000 */
  78   1              ISP_CMD         =       ISP_CMD |       READ_AP_and_Data_Memory_Command;        /* 0000,0001 */
  79   1      
  80   1              ISP_TRIG        =       0x46;        /* 触发ISP_IAP命令 */
  81   1              ISP_TRIG        =       0xb9;        /* 触发ISP_IAP命令 */
  82   1              _nop_();
  83   1      
  84   1              ISP_IAP_disable();
  85   1      
  86   1              if(ISP_DATA     ==      original_data)
  87   1                      return  OK;
  88   1              else
  89   1                      return  ERROR;
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    144    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
